{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "14354028578084678688"
    }
  },
  "parameters": {
    "suffix": {
      "type": "string",
      "defaultValue": "[substring(newGuid(), 0, 6)]",
      "minLength": 4,
      "maxLength": 6,
      "metadata": {
        "description": "Suffix to create uniqute resource names. 4-6 symbols. Default is random 6 symbols."
      }
    }
  },
  "variables": {
    "rg": "[resourceGroup()]",
    "location": "[resourceGroup().location]",
    "openAiHost": "azure",
    "openAiSkuName": "S0",
    "chatGptModelName": "",
    "chatGptDeploymentName": "",
    "chatGptDeploymentVersion": "",
    "chatGptDeploymentCapacity": 1,
    "chatGpt": {
      "modelName": "[if(not(empty(variables('chatGptModelName'))), variables('chatGptModelName'), if(startsWith(variables('openAiHost'), 'azure'), 'gpt-35-turbo', 'gpt-3.5-turbo'))]",
      "deploymentName": "[if(not(empty(variables('chatGptDeploymentName'))), variables('chatGptDeploymentName'), 'chat')]",
      "deploymentVersion": "[if(not(empty(variables('chatGptDeploymentVersion'))), variables('chatGptDeploymentVersion'), '0613')]",
      "deploymentCapacity": "[if(not(equals(variables('chatGptDeploymentCapacity'), 0)), variables('chatGptDeploymentCapacity'), 29)]"
    },
    "embeddingModelName": "",
    "embeddingDeploymentName": "",
    "embeddingDeploymentVersion": "",
    "embeddingDeploymentCapacity": 1,
    "embeddingDimensions": 0,
    "embedding": {
      "modelName": "[if(not(empty(variables('embeddingModelName'))), variables('embeddingModelName'), 'text-embedding-ada-002')]",
      "deploymentName": "[if(not(empty(variables('embeddingDeploymentName'))), variables('embeddingDeploymentName'), 'embedding')]",
      "deploymentVersion": "[if(not(empty(variables('embeddingDeploymentVersion'))), variables('embeddingDeploymentVersion'), '2')]",
      "deploymentCapacity": "[if(not(equals(variables('embeddingDeploymentCapacity'), 0)), variables('embeddingDeploymentCapacity'), 29)]"
    },
    "openAiDeployments": [
      {
        "name": "[variables('chatGpt').deploymentName]",
        "model": {
          "format": "OpenAI",
          "name": "[variables('chatGpt').modelName]",
          "version": "[variables('chatGpt').deploymentVersion]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[variables('chatGpt').deploymentCapacity]"
        }
      },
      {
        "name": "[variables('embedding').deploymentName]",
        "model": {
          "format": "OpenAI",
          "name": "[variables('embedding').modelName]",
          "version": "[variables('embedding').deploymentVersion]"
        },
        "sku": {
          "name": "Standard",
          "capacity": "[variables('embedding').deploymentCapacity]"
        }
      }
    ],
    "openAiServiceName": "[format('km-openai-{0}', parameters('suffix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('managedidentity-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "13128519470293218154"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "name": {
              "type": "string",
              "defaultValue": "[format('km-UAidentity-{0}', parameters('suffix'))]",
              "minLength": 2,
              "maxLength": 60,
              "metadata": {
                "description": "Managed Identity name."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "variables": {
            "bootstrapRoleAssignmentId": "[guid(format('{0}contributor', resourceGroup().id))]",
            "contributorRoleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c', subscription().subscriptionId)]"
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[variables('bootstrapRoleAssignmentId')]",
              "properties": {
                "roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').principalId]",
                "scope": "[resourceGroup().id]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
            },
            "managedIdentityClientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name')), '2023-01-31').clientId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('storage-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "1284388141395834802"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The tags to be assigned to the created resources."
              }
            },
            "storageAccountName": {
              "type": "string",
              "defaultValue": "[format('kmstorage{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the Azure Storage Account."
              }
            },
            "storageBlobContainerName": {
              "type": "string",
              "defaultValue": "smemory",
              "metadata": {
                "description": "The name of the Container in Azure Storage."
              }
            },
            "externalTasksQueueName": {
              "type": "string",
              "defaultValue": "[format('km-queue-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the Queue in Azure Storage."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-09-01",
              "name": "[parameters('storageAccountName')]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageBlobContainerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2021-09-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('externalTasksQueueName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('storageAccountName')]"
            },
            "blobContainerName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('storageBlobContainerName')]"
            },
            "queueName": {
              "type": "string",
              "metadata": {
                "description": "The storage account name."
              },
              "value": "[parameters('externalTasksQueueName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('search-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "name": {
            "value": "[format('km-search-{0}', parameters('suffix'))]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "14127231615447736596"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 60,
              "metadata": {
                "description": "Service name must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 60 characters in length."
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
              ],
              "metadata": {
                "description": "The pricing tier of the search service you want to create (for example, basic or standard)."
              }
            },
            "replicaCount": {
              "type": "int",
              "defaultValue": 1,
              "minValue": 1,
              "maxValue": 12,
              "metadata": {
                "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
              }
            },
            "partitionCount": {
              "type": "int",
              "defaultValue": 1,
              "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
              ],
              "metadata": {
                "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
              }
            },
            "hostingMode": {
              "type": "string",
              "defaultValue": "default",
              "allowedValues": [
                "default",
                "highDensity"
              ],
              "metadata": {
                "description": "Applicable only for SKUs set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2020-08-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]",
                "hostingMode": "[parameters('hostingMode')]"
              }
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2023-08-01",
              "name": "[format('{0}-index', parameters('name'))]",
              "location": "[parameters('location')]",
              "kind": "AzureCLI",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              },
              "properties": {
                "azCliVersion": "2.52.0",
                "environmentVariables": [
                  {
                    "name": "gr",
                    "value": "[format('{0}', resourceGroup().name)]"
                  },
                  {
                    "name": "SearchName",
                    "value": "[format('{0}', parameters('name'))]"
                  }
                ],
                "scriptContent": "    queryKey=$((az search query-key list -g $gr --service-name \"$SearchName\" --query \"[0].key\") | xargs)\n    adminKey=$((az search admin-key show -g $gr --service-name \"$SearchName\" --query \"primaryKey\") | xargs)\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\nindexJson=$(cat <<EOF\n{ \n  \"name\": \"default\", \n  \"fields\": [ \n    { \"name\": \"HotelId\", \"type\": \"Edm.String\", \"key\": true, \"retrievable\": true, \"searchable\": true, \"filterable\": true }, \n    { \"name\": \"HotelName\", \"type\": \"Edm.String\", \"retrievable\": true, \"searchable\": true, \"filterable\": false, \"sortable\": true, \"facetable\": false }, \n    { \"name\": \"Description\", \"type\": \"Edm.String\", \"retrievable\": true, \"searchable\": true, \"filterable\": false, \"sortable\": false, \"facetable\": false, \"analyzer\": \"en.microsoft\" }, \n    { \"name\": \"Description_fr\", \"type\": \"Edm.String\", \"retrievable\": true, \"searchable\": true, \"filterable\": false, \"sortable\": false, \"facetable\": false, \"analyzer\": \"fr.microsoft\" }, \n    { \"name\": \"Address\", \"type\": \"Edm.ComplexType\",  \n      \"fields\": [ \n          { \"name\": \"StreetAddress\", \"type\": \"Edm.String\", \"retrievable\": true, \"filterable\": false, \"sortable\": false, \"facetable\": false, \"searchable\": true }, \n          { \"name\": \"City\", \"type\": \"Edm.String\", \"retrievable\": true, \"searchable\": true, \"filterable\": true, \"sortable\": true, \"facetable\": true }, \n          { \"name\": \"StateProvince\", \"type\": \"Edm.String\", \"retrievable\": true, \"searchable\": true, \"filterable\": true, \"sortable\": true, \"facetable\": true } \n        ] \n    } \n  ] \n}\nEOF\n)\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    apicall=$(curl -H \"Content-Type: application/json\" \\\n      -H \"api-key: $adminKey\" \\\n      -d \"$indexJson\" \\\n      -X POST \\\n      https://$SearchName.search.windows.net/indexes?api-version=2020-06-30)\n    \n    echo \"{\\\"queryKey\\\": \\\"$queryKey\\\", \\\"adminKey\\\": \\\"$adminKey\\\"}\" > $AZ_SCRIPTS_OUTPUT_PATH\n  ",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "PT1H"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Search/searchServices', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "searchName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('openai-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('openAiServiceName')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sku": {
            "value": {
              "name": "[variables('openAiSkuName')]"
            }
          },
          "deployments": {
            "value": "[variables('openAiDeployments')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "16250763338913455815"
            },
            "description": "Creates an Azure Cognitive Services instance."
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]",
              "metadata": {
                "description": "The custom subdomain name used to access the API. Defaults to the value of the name parameter."
              }
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ]
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            },
            "allowedIpRules": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": "[if(empty(parameters('allowedIpRules')), createObject('defaultAction', 'Allow'), createObject('ipRules', parameters('allowedIpRules'), 'defaultAction', 'Deny'))]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                "networkAcls": "[parameters('networkAcls')]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(parameters('deployments')[copyIndex()], 'sku'), parameters('deployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', 1))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerAppsEnvironment-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "4614917084751365821"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "The location where the resources will be created."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The tags to be assigned to the created resources."
              }
            },
            "containerAppsEnvironmentName": {
              "type": "string",
              "defaultValue": "[format('km-cae-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the container apps environment. If set, it overrides the name generated by the template."
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": "[format('km-log-{0}', parameters('suffix'))]",
              "metadata": {
                "description": "The name of the log analytics workspace. If set, it overrides the name generated by the template."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": "[format('km-appins-{0}', parameters('suffix'))]",
              "metadata": {
                "description": " The name of the application insights. If set, it overrides the name generated by the template."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "features": {
                  "searchVersion": 1
                },
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('applicationInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppsEnvironmentName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Consumption"
              },
              "properties": {
                "daprAIInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]",
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2021-06-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2021-06-01').primarySharedKey]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppsEnvironmentName": {
              "type": "string",
              "value": "[parameters('containerAppsEnvironmentName')]"
            },
            "containerAppsEnvironmentId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[parameters('logAnalyticsWorkspaceName')]"
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "The name of the application insights."
              },
              "value": "[parameters('applicationInsightsName')]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('containerAppService-{0}', parameters('suffix'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "suffix": {
            "value": "[parameters('suffix')]"
          },
          "containerAppsEnvironmentId": {
            "value": "[createObject('containerAppsEnvironmentId', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentId.value, 'containerAppsEnvironmentName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentName.value, 'logAnalyticsWorkspaceName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.logAnalyticsWorkspaceName.value, 'applicationInsightsName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsName.value, 'applicationInsightsInstrumentationKey', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value, 'applicationInsightsConnectionString', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsConnectionString.value).containerAppsEnvironmentId]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[createObject('containerAppsEnvironmentId', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentId.value, 'containerAppsEnvironmentName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentName.value, 'logAnalyticsWorkspaceName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.logAnalyticsWorkspaceName.value, 'applicationInsightsName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsName.value, 'applicationInsightsInstrumentationKey', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value, 'applicationInsightsConnectionString', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsConnectionString.value).applicationInsightsInstrumentationKey]"
          },
          "applicationInsightsConnectionString": {
            "value": "[createObject('containerAppsEnvironmentId', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentId.value, 'containerAppsEnvironmentName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentName.value, 'logAnalyticsWorkspaceName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.logAnalyticsWorkspaceName.value, 'applicationInsightsName', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsName.value, 'applicationInsightsInstrumentationKey', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value, 'applicationInsightsConnectionString', reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsConnectionString.value).applicationInsightsConnectionString]"
          },
          "managedIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityId.value]"
          },
          "managedIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix'))), '2022-09-01').outputs.managedIdentityClientId.value]"
          },
          "AzureAISearch_Endpoint": {
            "value": "[format('https://{0}.search.windows.net', createObject('searchName', reference(resourceId('Microsoft.Resources/deployments', format('search-{0}', parameters('suffix'))), '2022-09-01').outputs.searchName.value).searchName)]"
          },
          "AzureBlobs_Account": {
            "value": "[createObject('storageAccountName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value, 'queueName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.queueName.value).storageAccountName]"
          },
          "AzureQueues_Account": {
            "value": "[createObject('storageAccountName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value, 'queueName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.queueName.value).storageAccountName]"
          },
          "AzureQueues_QueueName": {
            "value": "[createObject('storageAccountName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value, 'queueName', reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.queueName.value).queueName]"
          },
          "AzureOpenAIEmbedding_Deployment": {
            "value": "[variables('embedding').deploymentName]"
          },
          "AzureOpenAIEmbedding_Endpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]"
          },
          "AzureOpenAIText_Deployment": {
            "value": "[variables('chatGpt').deploymentName]"
          },
          "AzureOpenAIText_Endpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "5051852318321049724"
            }
          },
          "parameters": {
            "suffix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "managedIdentityId": {
              "type": "string"
            },
            "managedIdentityClientId": {
              "type": "string"
            },
            "kmServiceName": {
              "type": "string",
              "defaultValue": "[format('km-service-{0}', parameters('suffix'))]"
            },
            "containerAppsEnvironmentId": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "applicationInsightsConnectionString": {
              "type": "string"
            },
            "AzureBlobs_Account": {
              "type": "string"
            },
            "AzureQueues_Account": {
              "type": "string"
            },
            "AzureQueues_QueueName": {
              "type": "string"
            },
            "AzureAISearch_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIText_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIText_Deployment": {
              "type": "string"
            },
            "AzureOpenAIEmbedding_Endpoint": {
              "type": "string"
            },
            "AzureOpenAIEmbedding_Deployment": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.App/containerapps",
              "apiVersion": "2023-11-02-preview",
              "name": "[parameters('kmServiceName')]",
              "location": "[parameters('location')]",
              "tags": {},
              "properties": {
                "environmentId": "[parameters('containerAppsEnvironmentId')]",
                "configuration": {
                  "secrets": [
                    {
                      "name": "appinsights-key",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    }
                  ],
                  "registries": [],
                  "activeRevisionsMode": "Single",
                  "ingress": {
                    "external": true,
                    "transport": "Auto",
                    "allowInsecure": false,
                    "targetPort": 9001,
                    "stickySessions": {
                      "affinity": "none"
                    },
                    "additionalPortMappings": []
                  }
                },
                "template": {
                  "containers": [
                    {
                      "name": "kernelmemory-service",
                      "image": "docker.io/bc123456/service:latest",
                      "command": [],
                      "resources": {
                        "cpu": "[json('0.25')]",
                        "memory": "0.5Gi"
                      },
                      "env": [
                        {
                          "name": "ASPNETCORE_ENVIRONMENT",
                          "value": "Production"
                        },
                        {
                          "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                          "value": "[parameters('applicationInsightsConnectionString')]"
                        },
                        {
                          "name": "AZURE_CLIENT_ID",
                          "value": "[parameters('managedIdentityClientId')]"
                        },
                        {
                          "name": "KernelMemory__Service__OpenApiEnabled",
                          "value": "true"
                        },
                        {
                          "name": "KernelMemory__ContentStorageType",
                          "value": "AzureBlobs"
                        },
                        {
                          "name": "KernelMemory__TextGeneratorType",
                          "value": "AzureOpenAIText"
                        },
                        {
                          "name": "KernelMemory__DefaultIndexName",
                          "value": "default"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__Enabled",
                          "value": "true"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AuthenticationType",
                          "value": "APIKey"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__HttpHeaderName",
                          "value": "Authorization"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AccessKey1",
                          "value": "ApiKey1ValueApiKey1ValueApiKey1Value"
                        },
                        {
                          "name": "KernelMemory__ServiceAuthorization__AccessKey2",
                          "value": "ApiKey2ValueApiKey2ValueApiKey2Value"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__DistributedOrchestration__QueueType",
                          "value": "AzureQueues"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__EmbeddingGeneratorTypes",
                          "value": "[[\"AzureOpenAIEmbedding\"]"
                        },
                        {
                          "name": "KernelMemory__DataIngestion__MemoryDbTypes",
                          "value": "[[\"AzureAISearch\"]"
                        },
                        {
                          "name": "KernelMemory__Retrieval__EmbeddingGeneratorType",
                          "value": "AzureOpenAIEmbedding"
                        },
                        {
                          "name": "KernelMemory__Retrieval__MemoryDbType",
                          "value": "AzureAISearch"
                        },
                        {
                          "name": "KernelMemory__Services__AzureBlobs__Account",
                          "value": "[parameters('AzureBlobs_Account')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureQueues__Account",
                          "value": "[parameters('AzureQueues_Account')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureQueues__QueueName",
                          "value": "[parameters('AzureQueues_QueueName')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureAISearch__Endpoint",
                          "value": "[parameters('AzureAISearch_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIText__Endpoint",
                          "value": "[parameters('AzureOpenAIText_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIText__Deployment",
                          "value": "[parameters('AzureOpenAIText_Deployment')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIEmbedding__Endpoint",
                          "value": "[parameters('AzureOpenAIEmbedding_Endpoint')]"
                        },
                        {
                          "name": "KernelMemory__Services__AzureOpenAIEmbedding__Deployment",
                          "value": "[parameters('AzureOpenAIEmbedding_Deployment')]"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  }
                }
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('managedIdentityId'))]": {}
                }
              }
            }
          ],
          "outputs": {
            "kmServiceName": {
              "type": "string",
              "value": "[parameters('kmServiceName')]"
            },
            "kmServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/containerapps', parameters('kmServiceName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('managedidentity-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('search-{0}', parameters('suffix')))]",
        "[resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix')))]"
      ]
    }
  ],
  "outputs": {
    "storageOutput": {
      "type": "object",
      "value": {
        "storageAccountName": "[reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.storageAccountName.value]",
        "queueName": "[reference(resourceId('Microsoft.Resources/deployments', format('storage-{0}', parameters('suffix'))), '2022-09-01').outputs.queueName.value]"
      }
    },
    "searchOutput": {
      "type": "object",
      "value": {
        "searchName": "[reference(resourceId('Microsoft.Resources/deployments', format('search-{0}', parameters('suffix'))), '2022-09-01').outputs.searchName.value]"
      }
    },
    "containerAppsEnvironmentOutput": {
      "type": "object",
      "value": {
        "containerAppsEnvironmentId": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentId.value]",
        "containerAppsEnvironmentName": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.containerAppsEnvironmentName.value]",
        "logAnalyticsWorkspaceName": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.logAnalyticsWorkspaceName.value]",
        "applicationInsightsName": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsName.value]",
        "applicationInsightsInstrumentationKey": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsInstrumentationKey.value]",
        "applicationInsightsConnectionString": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppsEnvironment-{0}', parameters('suffix'))), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
      }
    },
    "serviceOutput": {
      "type": "object",
      "value": {
        "kmServiceId": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppService-{0}', parameters('suffix'))), '2022-09-01').outputs.kmServiceId.value]",
        "kmServiceName": "[reference(resourceId('Microsoft.Resources/deployments', format('containerAppService-{0}', parameters('suffix'))), '2022-09-01').outputs.kmServiceName.value]"
      }
    },
    "aoaiOutput": {
      "type": "object",
      "value": {
        "aoaiEndpoint": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.endpoint.value]",
        "aoaiId": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.id.value]",
        "aoaiName": "[reference(resourceId('Microsoft.Resources/deployments', format('openai-{0}', parameters('suffix'))), '2022-09-01').outputs.name.value]"
      }
    }
  }
}